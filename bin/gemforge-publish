#!/bin/sh
set -euf
. sixarm-shell-functions

## Program Tracking ##

program_command="gemforge-publish"
program_version="5.0.0"
program_updated="2018-05-12"
program_license="GPL"
program_contact="Joel Parker Henderson (joel@joelparkerhenderson.com)"

## Help Function ##

help(){
cat << EOF
gemforge-publish

Publish our gem from our current directory
to a variety of destinations (remote, github, etc.)

This is intended for a directory with these kinds of files:

  * `foo.gemspec`  # gemspec file that sets the name, version, etc.
  * `coverage`     # autogenerated rcov files
  * `doc/`         # autogenerated rdoc files or yardoc files
  * `lib/foo/`     # class files
  * `lib/foo.rb`   # file that loads all the other files
  * `test/`        # test files

Example:

    cd mygem
    gemforge-publish
    => removes all version of this gem, e.g. rm mygem-1.2.3.gem
    => removes temp files, e.g. files ending in tilde, hash, etc.
    => builds the gem
    => rdoc with custom template
    => git add, commit, push
    => copy to railapp.com then remote gem generate

Tracking:

  * Command: $program_command
  * Version: $program_version
  * Updated: $program_updated
  * License: $program_license
  * Contact: $program_contact
EOF
}

## Preflight

cmd "gem"  || die "cmd gem"
cmd "ruby" || die "cmd ruby"
cmd "yard" || die "cmd yard"

# Paths
gem='/usr/bin/env gem'
ruby='/usr/bin/env ruby'

# Where are we running?
pwd=`pwd`
basename=`basename $pwd`
gem_name=`gemspec-cat | gemspec-to-gem-name`
gem_name_version=`gemspec-cat | gemspec-to-gem-name-version`
gem_version=`gemspec-cat | gemspec-to-gem-version`
commit_msg=$1

echo gemforge-publish $gem_name_version $commit_msg

### BUILD

gemforge-rm-old-files
gem build --quiet *.gemspec
echo "$gem_version" > VERSION
gemforge-sha512     || exit "gemforge-sha512 failed for gem $gem_name_version"
gemforge-update-doc || exit "gemforge-update-doc failed for gem $gem_name_version"
gemforge-proof      || exit "gemforge-proof failed for gem $gem_name_version"

### PUBLISH

#echo 'PUBLISH GITHUB...' && gemforge-publish-to-github "$commit_msg" && echo '...GITHUB DONE'
echo 'PUBLISH TO LOCAL HOST...'  && gemforge-publish-to-local-host  && echo '...DONE'
echo 'PUBLISH TO REMOTE HOST...' && gemforge-publish-to-remote-host && echo '...DONE'
echo 'PUBLISH TO RUBYDOC...' && gemforge-publish-to-rubydoc && echo '...DONE'
echo 'PUBLISH TO RUBYGEMS...' && gemforge-publish-to-rubygems && echo '...DONE'


