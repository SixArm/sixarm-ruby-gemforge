#!/bin/bash
set -o errexit

##
# Do simple checking of our gem's files to ensure
# that everything looks good before we publish.
##

gem_name_version=`gemspec-cat | gemspec-to-gem-name-version`
gem_name=`gemspec-cat | gemspec-to-gem-name`
gem_version=`gemspec-cat | gemspec-to-gem-version`

team="SixArm"
repo="$gem_name"

github_uri="https://github.com/$team/$repo"

travis_uri="https://travis-ci.org/$team/$repo"
travis_png="https://travis-ci.org/$team/$repo.png"
travis_badge="[![Build Status]($travis_png)]($travis_uri)"

codeclimate_uri="https://codeclimate.com/github/$team/$repo"
codeclimate_png="https://codeclimate.com/github/$team/$repo.png"
codeclimate_badge="[![Code Climate]($codeclimate_png)]($codeclimate_uri)"

function err ( ) {
   echo "gemforge-lint $gem_name_version $@" >&2
}

function file_line_should_eq {
  file=$1
  line_num=$2
  expect_line=$3
  actual_line=`sed -n "${line_num}p" "$file"`
  if [ "$expect_line" != "$actual_line" ]
  then
    err "file $file line $line_num. ␟ Expect: ␟ $expect_line ␟ Actual:$actual_line"
  fi
}

function grepq {
  grep -q "$2" "$1" || err "$1 grep $2"
}

### Repair

# Repair via placeholders
[ -e "VERSION" ] || echo "$gem_version" > VERSION

# Repair via cookie cutter
for path in ".gitignore" ".rspec" ".travis.yml" "CONTRIBUTING.md" "LICENSE.md" "Gemfile" "Gemfile.lock" "Rakefile"
do
    [ -e $path ] || cp ~/git/sixarm/sixarm_ruby_week/$path .
done

# Repair via in-place updates
grep -q "task :default => [:test]" Rakefile || echo "task :default => [:test]" >> Rakefile

# Repair via building
[ -e "coverage" ] || gemforge-test
[ -e "doc" ] || gemforge-create-doc
[ -e "$gem_name_version.gem" ] || gemforge-build-gemspec
[ -e "$gem_name_version-sha512.txt" ] || gemforge-sha512

# Repair versions
grep -q "^$gem_version$" VERSION || echo "$gem_version" > VERSION

# Fill in
gemforge-fill-in

###

for path in "CHANGELOG.txt" "INSTALL.txt" "LICENSE.txt" "$gem_name.sha512.txt"
do
  [ -e "$path" ] && err "$path should not exist"
done

ls -1 *.gem | wc -l | grep "^ *1$" > /dev/null || err "More than one gem"
ls -1 *sha512.txt | wc -l | grep "^ *1$" > /dev/null || err "More than one sha512"

for path in ".codeclimate.yml" ".document" ".gemtest" ".git" ".rspec" "CONTRIBUTING.md" "LICENSE.md" "Gemfile" "Gemfile.lock" "Rakefile" "README.md" "VERSION" "coverage" "coverage/assets" "coverage/index.html" "doc" "lib" "lib/${gem_name}.rb" "test" "$gem_name.gemspec" "$gem_name_version.gem" "$gem_name_version-sha512.txt"
do
  [ -e "$path" ] || err "-e $path"
done

###
#
# Specific files
#
###

### *.gemspec file

file="$gem_name.gemspec"

file_line_should_eq "$file" 1 "# -*- coding: utf-8 -*-"
file_line_should_eq "$file" 2 ""
file_line_should_eq "$file" 3 "Gem::Specification.new do |s|"

for s in \
  "^  s.name           = \"sixarm_ruby_.*\"" \
  "^  s.summary        = \"SixArm.com » Ruby » .*\"" \
  "^  s.description    = \".*\"" \
  "^  s.version        = \".*\"" \
  "^  s.author         = \"SixArm\"" \
  "^  s.email          = \"sixarm@sixarm.com\"" \
  "^  s.homepage       = \"http://sixarm.com/\"" \
  "^  s.licenses       = \[.*\]" \
  "^  s.signing_key    =  \".*/sixarm-rsa-4096-x509-20150314-private.pem\"" \
  "^  s.cert_chain     = \[\".*/sixarm-rsa-4096-x509-20150314-public.pem\"\]" \
  "^  s.platform       = Gem::Platform::RUBY" \
  "^  s.require_path   = \"lib\"" \
  "^  s.has_rdoc       = true" \
  "^  s.files = \[" \
  "^    \".gemtest\"," \
  "^    \"CHANGES.md\"," \
  "^    \"CONTRIBUTING.md\"," \
  "^    \"LICENSE.md\"," \
  "^    \"Rakefile\"," \
  "^    \"README.md\"," \
  "^    \"VERSION\"," \
  "^  s.test_files = \["
do
  grepq "$file" "$s"
done

### .gitignore file

file=".gitignore"

for s in \
  "coverage", \
  "doc"
do
  grep -q "^$s$" $file &&
    err "$file incorrectly ignores \"$s\". ␟ Please delete \"$s\"."
done

### .travis.yml

file=".travis.yml"

grepq "$file" "sudo: false"
grepq "$file" "cache: bundler"

### CHANGES.md file

file="CHANGES.md"

grep -q "^# Changes$" $file ||
    err "$file headline is wrong. ␟ Please fix to: ␟ # Changes"

grep -q '^\* 2015-07-07 .* Update gemspec to use file manifest' $file ||
    err "$file missing update. ␟ Please add: ␟ * 2015-07-07 .* Update gemspec to use file manifest"

cat $file | grep -v ' etc\.$' | grep -q '\.$' &&
    err "$file has line that ends in period. ␟ Please delete period."

### LICENSE.md file

file="LICENSE.md"

grep -q '^# License$' $file ||
    err "$file headline is wrong. ␟ Please fix to: ␟ # License ␞"

#grep -q '^Author::\( Joel Parker Henderson, joel@joelparkerhenderson.com\| Found on the internet by Joel Parker Henderson, joel@joelparkerhenderson.com\)' $file || err "$file author is wrong"
#  "^\(Copyright (c) Joel Parker Henderson\| Copyright the original author; please email me if you know who wrote this\)" \

### README.md file

file="README.md"

for s in \
  "^# SixArm.com » Ruby » <br> " \
  "^* Doc: <http://sixarm.com/$gem_name/doc>" \
  "^* Gem: <http://rubygems.org/gems/$gem_name>" \
  "^* Repo: <http://github.com/sixarm/$gem_name>" \
  "^* Email: Joel Parker Henderson, <joel@sixarm.com>" \
  "^## Introduction" \
  "^For docs go to <http://sixarm.com/$gem_name/doc>" \
  "^## Install quickstart" \
  "^    gem install $gem_name" \
  "^    gem \"$gem_name\", \">=$gem_version\", \"<.*\"" \
  "^    require \"$gem_name\"" \
  "^## Install with security (optional)" \
  "^    gem install $gem_name --trust-policy HighSecurity"
do
  grepq "$file" "$s"
done

file_line_should_eq "$file" 3 "$codeclimate_badge"
file_line_should_eq "$file" 4 "$travis_badge"

### Rakefile file

file="Rakefile"

grep -q "task :default => \[:test\]" $file ||
    err "$file needs default test. ␟ Please add: ␟ task :default => [:test]"

### VERSION file

file="VERSION"

grep -q "^$gem_version$" $file ||
    err "$file version is wrong. ␟ Please update to: ␟ $gem_version"

###
#
# Lint each of the deeper files
#
###

for file in `find lib -type f -name "*.rb"`
do
    file_line_should_eq "$file" 1 "# -*- coding: utf-8 -*-"
done

for file in `find test -type f -name "*_test.rb"`
do
    grep -q "^Minitest::Test .* MiniTest::Unit::TestCase" "$file" &&
        err "$file contains Minitest::Test...Test::Unit::TestCase. ␟ Please delete that line, such as running: ␟ sed -i '/^Minitest::Test .* MiniTest::Unit::TestCase/d' test/{*.rb,**/*.rb}"
    grep -q "Test::Unit::TestCase" "$file" &&
        err "$file contains Test::Unit::TestCase. ␟ Please update to: Minitest::Test, such as running: ␟ sed -i 's/Test::Unit::TestCase/Minitest::Test/' test/{*.rb,**/*.rb}"
    file_line_should_eq "$file" 1 "# -*- coding: utf-8 -*-"
    file_line_should_eq "$file" 2 "require \"minitest/autorun\""
    file_line_should_eq "$file" 3 "require \"simplecov\""
    file_line_should_eq "$file" 4 "SimpleCov.start"
done

exit 0
